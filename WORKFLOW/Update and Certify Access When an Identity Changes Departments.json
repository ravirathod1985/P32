{
  "id": "249d0c74-43d9-43a1-9861-1b28ce2e443c",
  "name": "Update and Certify Access When an Identity Changes Departments",
  "description": "Workflow to update a user's access during a mover scenario, such as when a user changes departments or teams.",
  "created": "2023-08-04T15:22:10.309175335Z",
  "modified": "2023-08-04T15:22:10.309175335Z",
  "modifiedBy": {
    "type": "IDENTITY",
    "id": "2c9180887f4b7fdb017f51d88bd02b35",
    "name": "27286"
  },
  "definition": {
    "start": "Wait",
    "steps": {
      "Compare Strings": {
        "choiceList": [
          {
            "comparator": "StringEquals",
            "nextStep": "Get Identity",
            "variableA.$": "$.trigger.changes[?(@.attribute=='department')].newValue",
            "variableB": "Sales"
          }
        ],
        "defaultStep": "success",
        "description": "Determines whether the identity's department attribute was updated to Sales. If so, the workflow proceeds. Otherwise, the workflow ends.\n\nNOTE: This template makes an assumption in later actions/nodes about the identity's former department. You could use an additional operator with branching steps for different departments for more flexibility.",
        "type": "choice"
      },
      "Create Certification Campaign": {
        "actionId": "sp:create-campaign",
        "attributes": {
          "description": "Department Change",
          "duration": "1w",
          "emailNotificationEnabled": true,
          "identityId.$": "$.trigger.identity.id",
          "name.$": "$.trigger.identity.name",
          "reviewerId.$": "$.getIdentity.managerRef.id"
        },
        "description": "Creates a certification campaign so that the identity's new manager can review their access, to ensure they have the access they need and don't have access they don't need.",
        "nextStep": "success",
        "type": "action",
        "versionNumber": 1
      },
      "Get Access": {
        "actionId": "sp:access:get",
        "attributes": {
          "accessprofiles": false,
          "entitlements": false,
          "getAccessBy": "searchQuery",
          "query": "name: \"Product Role\"",
          "roles": true
        },
        "description": "Gets all roles with \"Product Role\" in their name.\n\nIn this example, the identity needs to retain this access despite their department move. If the access gets removed because they no longer meet the role criteria, it must be put back by this workflow. This step retrieves the access for the Manage Access step to add.",
        "nextStep": "Manage Access",
        "type": "action",
        "versionNumber": 1
      },
      "Get Identity": {
        "actionId": "sp:get-identity",
        "attributes": {
          "id.$": "$.trigger.identity.id"
        },
        "description": "Retrieves available details about the identity.",
        "nextStep": "Get Access",
        "type": "action",
        "versionNumber": 2
      },
      "Get Identity 1": {
        "actionId": "sp:get-identity",
        "attributes": {
          "id.$": "$.getIdentity.managerRef.id"
        },
        "description": "This node is used to gather information about the user's manager to populate their email in \"Recipient\"",
        "nextStep": "Send Email",
        "type": "action",
        "versionNumber": 2
      },
      "Manage Access": {
        "actionId": "sp:access:manage",
        "attributes": {
          "addIdentities.$": "$.trigger.identity.id",
          "comments": "Automatically requested as transitory access by workflows",
          "removeDuration": "2w",
          "requestType": "GRANT_ACCESS",
          "requestedItems.$": "$.getAccess.accessItems"
        },
        "description": "Adds the access from the Get Access step to the identity.",
        "nextStep": "Get Identity 1",
        "type": "action",
        "versionNumber": 1
      },
      "Send Email": {
        "actionId": "sp:send-email",
        "attributes": {
          "body": "Attention, <br><p>User <b style=\"\">${name} </b>has recently changed departments </p><br>Thank you,<br>Your Access Team",
          "context": {
            "name.$": "$.getIdentity.attributes.displayName"
          },
          "recipientEmailList.$": "$.getIdentity1.attributes.email",
          "recipientId.$": "$.getIdentity.managerRef.id",
          "subject": "Department Change"
        },
        "description": "Sends an email to the identity's manager. Configure details about this email below.",
        "nextStep": "Create Certification Campaign",
        "type": "action",
        "versionNumber": 2
      },
      "Wait": {
        "actionId": "sp:sleep",
        "attributes": {
          "duration": "1h",
          "type": "waitFor"
        },
        "description": "Pauses to wait for all other provisioning activities to complete, such as automated role or access profile removals.",
        "nextStep": "Compare Strings",
        "type": "action",
        "versionNumber": 1
      },
      "success": {
        "description": "Ends the workflow and marks it as a success.",
        "type": "success"
      }
    }
  },
  "enabled": false,
  "creator": {
    "type": "IDENTITY",
    "id": "2c9180887f4b7fdb017f51d88bd02b35",
    "name": "27286"
  },
  "owner": {
    "type": "IDENTITY",
    "id": "2c9180887f4b7fdb017f51d88bd02b35",
    "name": "27286"
  },
  "trigger": {
    "type": "EVENT",
    "attributes": {
      "filter.$": "$.changes[?(@.attribute == \"department\")]",
      "id": "idn:identity-attributes-changed"
    }
  }
}