{
  "description": "Before Provisioning Rule which to add mandatory fields to Provisioning Plan for all Modify Operations.",
  "type": "BeforeProvisioning",
  "signature": {
    "input": [],
    "output": null
  },
  "sourceCode": {
    "version": "2024-09-17 17:20:32",
    "script": "\n    \n\timport java.util.List;\n    import sailpoint.object.ProvisioningPlan;\n    import sailpoint.object.ProvisioningPlan.AccountRequest;\n    import sailpoint.object.ProvisioningPlan.AttributeRequest;\n    import sailpoint.object.Identity;\n\timport sailpoint.rule.Identity;\n\timport sailpoint.rule.Account;\n    import sailpoint.object.*;\n    import java.util.HashMap;\n    import java.util.Map;\n\n    public AttributeRequest newAttributeRequest(String attributeName, Object attributeValue){\n        AttributeRequest attributeRequest = new ProvisioningPlan.AttributeRequest();\n        attributeRequest.setName(attributeName);\n        attributeRequest.setOperation(ProvisioningPlan.Operation.Add);\n        attributeRequest.setValue(attributeValue);\n        return attributeRequest;\n    }\n    \n\t//Key = Identity Attribute    Value = Account Attribute\n    Map attributeTranslationMap = new HashMap();\n    attributeTranslationMap.put(\"displayName\",\"name\");\n\tattributeTranslationMap.put(\"uid\",\"Username\");\n\tattributeTranslationMap.put(\"email\",\"Email\");\n\tattributeTranslationMap.put(\"managerEmail\",\"supervisorEmail\");\n\tattributeTranslationMap.put(\"location\",\"location\");\n\tattributeTranslationMap.put(\"employeeType\",\"EmployeeType\");\n\tattributeTranslationMap.put(\"jobTitle\",\"JobTitle\");\n\tattributeTranslationMap.put(\"department\",\"Department\");\n\tattributeTranslationMap.put(\"startDate\",\"StartDate\");\n\tattributeTranslationMap.put(\"firstname\",\"FirstName\");\n\tattributeTranslationMap.put(\"lastname\",\"LastName\");\n\n\tString sourceName = null, action = null, acctOp = null, attrOp = null;\n\t// needs to be update for each ServiceNow Environment\n\tString DEFAULT_ASSIGNMENT_GROUP = \"a31d8bd96f3e9a40c7fe90264b3ee4b3xxxx\"; \n\t\n    if( plan != null ){\n        if (plan.getIdentity() != null && plan.getAccountRequests() != null){\n            List accountRequests = plan.getAccountRequests();\n            sailpoint.object.Identity identity = plan.getIdentity();\n            \n            if (accountRequests != null){\n                for (AccountRequest accountRequest : accountRequests){\n                \tsourceName = accountRequest.getApplication();\n                \tacctOp = accountRequest.getOperation().toString();\n                \t\n                    if (identity != null ){\n                        if ( ( accountRequest.getAttributeRequests() != null ) && ( !accountRequest.getAttributeRequests().isEmpty() ) ){\n                            for(String attributeKey : attributeTranslationMap.keySet() ) {                                \n                                if(identity.getStringAttribute(attributeKey) != null && accountRequest.getAttributeRequest(attributeTranslationMap.get(attributeKey)) == null ){\n                                    plan.put(attributeTranslationMap.get(attributeKey), identity.getStringAttribute(attributeKey) );\n                                }\n                            }\n                        }\n                    }\n                    \n                    if(\"Modify\".equalsIgnoreCase(acctOp)){\n                    \tList attrReqs = accountRequest.getAttributeRequests();\n                    \t\n                    \tif(attrReqs!=null && !attrReqs.isEmpty()){\n                    \t\tfor (AttributeRequest attrReq : attrReqs){\n                    \t\t\tattrOp = attrReq.getOperation().toString();\n                    \t\t}\n                    \t}\n                    } \n                }\n            }\n\t\t    \n\t\t\tMap arguments = (Map)plan.getArguments();\n\t\t\tsailpoint.rule.Identity requester = null;\n\t\t    \n\t\t\tString requesterName = arguments.get(\"requester\");\n\t\t\tString appName = integration.getName();\n\n\t\t\tString requesterSource = null;\n\t\t\tif (appName != null) {\n\t\t\t\trequesterSource = (String)idn.getSourceAttributeBySourceName(appName, \"requesterSource\");\n\t\t\t}\n\t\t\t\n\t\t\t// Get Account's native Identity (aka unique accountId)\n\t\t\tString openedBy = null;\n\t\t\tString requestedFor = null;\n\t\t\tif (requesterSource != null) {\n\t\t\t\tif (requesterName != null) {\n\t\t\t\t\topenedBy = idn.getFirstAccountNativeIdentity(requesterSource, requesterName);\n\t\t\t\t}\n\t\t\t\tif (identity != null) {\n\t\t\t\t\trequestedFor = idn.getFirstAccountNativeIdentity(requesterSource, identity.getName());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\targuments.put(\"requesterSource\", requesterSource);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tlog.warn(\"Attribute 'requesterSource' is null in the application: \" + appName);\n\t\t\t}\n\n\t\t\tif (requestedFor != null) {\n\t\t\t\targuments.put(\"requested_for\", requestedFor);\n\t\t\t}\n\n\t\t\tif (openedBy != null) {\n\t\t\t\targuments.put(\"opened_by\", openedBy);\n\t\t\t\targuments.put(\"requested_by\", openedBy);\n\t\t\t}\n\n\t\t\tif (identity.getName() != null) {\n\t\t\t\targuments.put(\"identityName\", identity.getName());\n\t\t\t\targuments.put(\"identityDisplayName\", identity.getDisplayName());\n\t\t\t}\n\t\t\t\n\t\t\tif (sourceName != null) {\n\t\t\t\targuments.put(\"source_system_name\", sourceName);\n\t\t\t}\n\n\t\t\tif (null != idn.getSourceAttributeBySourceName(sourceName, \"snowAssignmentGroup\")) {\n\t\t\t    arguments.put(\"snowAssignmentGroup\", idn.getSourceAttributeBySourceName(sourceName, \"snowAssignmentGroup\"));\n\t\t\t} else {\n\t\t\t    arguments.put(\"snowAssignmentGroup\", DEFAULT_ASSIGNMENT_GROUP);\n\t\t    }\n\t\t\t\n\t\t\tif(acctOp != null){\n\t\t\t\tif(\"Create\".equalsIgnoreCase(acctOp)){\n\t\t\t\t\taction = \"Create Account\";\n\t\t\t\t} else if(\"Disable\".equalsIgnoreCase(acctOp)){\n\t\t\t\t\taction = \"Disable Account\";\n\t\t\t\t} else if(\"Enable\".equalsIgnoreCase(acctOp)){\n\t\t\t\t\taction = \"Enable Account\";\n\t\t\t\t} else if(\"Modify\".equalsIgnoreCase(acctOp)){\n\t\t\t\t\tif(\"Add\".equalsIgnoreCase(attrOp)){\n\t\t\t\t\t\taction = \"Add Access\";\n\t\t\t\t\t} else if(\"Remove\".equalsIgnoreCase(attrOp)){\n\t\t\t\t\t\taction = \"Remove Access\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\taction = \"Update Account\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(action != null){\n\t\t\t\t\targuments.put(\"action\", action);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//auto-close configuration\n\t\t\t\tif (null != idn.getSourceAttributeBySourceName(sourceName, \"autoCloseOperations\")) {\n\t\t\t\t   String autoCloseOperations = idn.getSourceAttributeBySourceName(sourceName, \"autoCloseOperations\");\n                   if (autoCloseOperations.contains(acctOp)) {\n\t\t\t\t   arguments.put(\"autoClose\",true);\n\t\t\t\t   } else {\n\t\t\t\t   arguments.put(\"autoClose\",false);\n\t\t\t\t   }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n  "
  },
  "attributes": {
    "sourceVersion": "2024-09-17 17:20:32"
  },
  "id": "6e55a03d49ef4e5eb34ec001e711f9f7",
  "name": "SDIM Attributes",
  "created": "2022-11-11T16:39:36.585Z",
  "modified": "2024-09-17T17:20:33.655Z"
}