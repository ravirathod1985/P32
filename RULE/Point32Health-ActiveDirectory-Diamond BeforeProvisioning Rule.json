{
  "description": "",
  "type": "BeforeProvisioning",
  "signature": {
    "input": [],
    "output": null
  },
  "sourceCode": {
    "version": "2024-09-24 21:53:50",
    "script": "\n\n\t\t\t\t\n\n\timport java.util.ArrayList;\n\timport java.util.Date;\n\timport java.text.SimpleDateFormat;\n\t\n\timport sailpoint.object.Identity;\n\timport sailpoint.object.Application;\n\timport sailpoint.object.Link;\n\timport sailpoint.object.ProvisioningPlan;\n\timport sailpoint.object.ProvisioningPlan.Operation;\n\timport sailpoint.object.ProvisioningPlan.AccountRequest;\n\timport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\n\timport sailpoint.object.ProvisioningPlan.AttributeRequest;\n\timport sailpoint.api.IdentityService;\n\timport sailpoint.tools.Util;\n\n\timport sailpoint.rule.Account;\n\n\tString THP_ACTIVE_DIRECTORY = \"THP-ActiveDirectory [source]\";\n\t\n\tString Environment=\"Sandbox\";\n\tString activeOU = null;\n\tString disabledOU = null;\n\t\n\tif(Environment.equals(\"Sandbox\")) {\n     activeOU = \"OU=TEST_THPUSERS,DC=thp,DC=tahphq,DC=tahp\"; //Sandbox users Active OU\n     disabledOU = \"OU=TEST_DISABLED_ACCOUNTS,OU=TEST_THPUSERS,DC=thp,DC=tahphq,DC=tahp\"; //Sandbox users Disable OU\n\t }\n    \n\t\n\tif (Environment.equals(\"Prod\")) {\n    \n     activeOU = \"OU=THPUSERS,DC=thp,DC=tahphq,DC=tahp\"; // Active OU\n     disabledOU = \"OU=DISABLED_ACCOUNTS,OU=THPUSERS,DC=thp,DC=tahphq,DC=tahp\"; // Disable OU\n\t}\n\t\n\tString adDomainUsers = \"CN=TEST_Domain Users,OU=TEST_ACCESS-GROUPS,OU=TEST_THPGROUPS,DC=thp,DC=tahphq,DC=tahp\";\n    Identity identity = null;\n    String nativeIdentity = null;\n    \n\tif( plan != null ) {\n\t\tidentity = plan.getIdentity();\n\t\tnativeIdentity = plan.getNativeIdentity();\n\t}\n\t\n\tif(identity != null) {\n\t\tlog.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] Executing Before Provisioning Rule.... nativeIdentity - \" + nativeIdentity );\n\t\t\n\t\t\n\t\tlog.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] Lifecycle State: \" + identity.getAttribute(\"cloudLifecycleState\") );\n\t\tif (Util.nullSafeEq(identity.getAttribute(\"cloudLifecycleState\"), \"deleteaccount\"))  {\n\t\t\tList emptyAttributes = new ArrayList();\n\t\t\t\n\t\t\tList accountRequests = plan.getAccountRequests();\n\t\t\tfor (AccountRequest accountRequest : accountRequests) {\n\t\t\t\tAccountRequest.Operation op = accountRequest.getOperation();\n      \t\t\t\t//delete account after 180 days of term\n      \t\t\t\tif  ( Util.nullSafeEq(accountRequest.getOperation(), AccountRequest.Operation.Enable)) {\n        \t\t    log.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] deleting account after 180 days of term \");\n\t\t\t\t\taccountRequest.setOperation(AccountRequest.Operation.Delete);\n\t\t\t\t\taccountRequest.setAttributeRequests(emptyAttributes);\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t} else if (Util.nullSafeEq(identity.getAttribute(\"cloudLifecycleState\"), \"removeaccess\"))  {\n\t\t\tList emptyAttributes = new ArrayList();\n\t\t\t\n\t\t\tList accountRequests = plan.getAccountRequests();\n\t\t\tfor (AccountRequest accountRequest : accountRequests) {\n\t\t\t\tAccountRequest.Operation op = accountRequest.getOperation();\n      \t\t\t\t//Remove all AD Access after 14 days\n      \t\t\t\tif  ( ( Util.nullSafeEq(accountRequest.getOperation(), AccountRequest.Operation.Enable)) || ( Util.nullSafeEq(accountRequest.getOperation(), AccountRequest.Operation.Modify)) ) {\n        \t\t\t\tlog.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] remove account access after initial term \");\n        \t\t\t\t\n\t\t\t\t\t\n                    List groupList = new ArrayList();\n\t\t            accountRequest.add(new AttributeRequest(\"memberOf\", ProvisioningPlan.Operation.Set, groupList));\n\t\t\t\t\taccountRequest.setOperation(AccountRequest.Operation.Disable);\n\t\t\t\t\taccountRequest.add(new AttributeRequest(\"AC_NewParent\",ProvisioningPlan.Operation.Set, disabledOU) );\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t} else if (Util.nullSafeEq(identity.getAttribute(\"cloudLifecycleState\"), \"inactive\")) {\n\t\t\tList accountRequests = plan.getAccountRequests();\n\t\t\tfor (AccountRequest accountRequest : accountRequests) {\n\t\t\t\t\n\t\t\t\t//move account to disabled OU on term when LCS is inactive\n\t\t\t\tif (Util.nullSafeEq(accountRequest.getOperation(),AccountRequest.Operation.Disable)) {\n\t\t\t\t\tlog.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] move account to disabled OU on term \");\n\t\t\t\t\t\n\t\t\t\t\taccountRequest.add(new AttributeRequest(\"AC_NewParent\",ProvisioningPlan.Operation.Set, disabledOU) );\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t} else if( Util.nullSafeEq(identity.getAttribute(\"cloudLifecycleState\"), \"active\") || Util.nullSafeEq(identity.getAttribute(\"cloudLifecycleState\"), \"prehire\") ){\n\t\t\tList accountRequests = plan.getAccountRequests();\n\t\t\tfor (AccountRequest accountRequest : accountRequests) {\n\t\t\t\n\t\t\t\t//move account to active OU on rehire\n\t\t\t\tif (Util.nullSafeEq(accountRequest.getOperation(),AccountRequest.Operation.Enable)) {\n\t\t\t\t\taccountRequest.add(new AttributeRequest(\"AC_NewParent\",ProvisioningPlan.Operation.Set, activeOU) );\n\t\t\t\t\taccountRequest.add(new AttributeRequest(\"msExchHideFromAddressLists\", ProvisioningPlan.Operation.Set, false));\n\t\t\t\t} else if (Util.nullSafeEq(accountRequest.getOperation(), AccountRequest.Operation.Create)) {\n\t\t\t\t// determine if there is an existing AlphaNumeric 6 account and change to modify and just add group\n\t\t\t\t   String adAccountName = idn.getFirstAccountNativeIdentity(\"THP_ACTIVE_DIRECTORY\", identity.getName());\n\t\t\t\t   Account adAccount = idn.getAccountByNativeIdentity(\"THP_ACTIVE_DIRECTORY\", adAccountName);\n\t\t\t\t   String sAMAccountName = idn.getRawAccountAttribute(adAccount,\"sAMAccountName\");\n\t\t\t\t   if (sAMAccountName.length() <= 6) {\n\t\t\t\t     accountRequest.setNativeIdentity(adAccountName);\n\t\t\t\t     accountRequest.setOperation(AccountRequest.Operation.Modify);\n\t\t\t\t     // remove all attribute requests but the AD group\n\t\t\t\t     List attReqs = accountRequest.getAttributeRequests();\n\t\t\t\t     List reqsToRemove = new ArrayList();\n\t\t\t\t       for (AttributeRequest attReq : attReqs) {\n\t\t\t\t          \tif (!attReq.getName().equals(\"memberOf\")) {\n\t\t\t\t\t       \t\treqsToRemove.add(attReq);\n\t\t\t\t\t\t\t}\n\t\t\t\t    \t}\n\t\t\t\t\t  for (AttributeRequest attReq : reqsToRemove) {\n\t\t\t\t\t\t\taccountRequest.remove(attReq);\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\tlog.info(\"identity: \"+ identity.getName() +\" :: [AD_PROV] Complete Before Provisioning Rule....\");\n  \n\n\t\t\t"
  },
  "attributes": {
    "sourceVersion": "2024-09-24 21:53:50"
  },
  "id": "34da92f5a29040af8a46c55cbf6b9c7f",
  "name": "Point32Health-ActiveDirectory-Diamond BeforeProvisioning Rule",
  "created": "2024-09-24T21:53:50.258Z",
  "modified": "2024-09-24T21:53:50.258Z"
}