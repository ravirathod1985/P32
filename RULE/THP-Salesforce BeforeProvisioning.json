{
  "description": "Before provisioning rule operations for THP-Salesforce.",
  "type": "BeforeProvisioning",
  "signature": {
    "input": [],
    "output": null
  },
  "sourceCode": {
    "version": "2022-11-15 21:51:12",
    "script": "\n\n    import sailpoint.object.ProvisioningPlan;\n    import sailpoint.object.Attributes;\n    import sailpoint.object.Identity;\n    import sailpoint.object.ProvisioningPlan.AccountRequest;\n    import sailpoint.object.ProvisioningPlan.AttributeRequest;\n    import sailpoint.object.ProvisioningPlan.Operation;\n    import sailpoint.object.ManagedAttribute;\n    import sailpoint.object.ManagedAttribute.Type;\t\t\n    import sailpoint.object.Filter;\n    import sailpoint.object.*;\n    import java.util.ArrayList;\n    import sailpoint.rule.ManagedAttributeDetails;\n    import sailpoint.tools.Util;\n    import java.util.Date;\n    import java.text.SimpleDateFormat;\n    import java.util.List;\n    import sailpoint.rule.Account;\n    \n    public AttributeRequest newAttributeRequest(String attributeName, Object attributeValue) \n    {\n      AttributeRequest attributeRequest = new ProvisioningPlan.AttributeRequest();\n      attributeRequest.setName(attributeName);\n      attributeRequest.setOperation(ProvisioningPlan.Operation.Set);\n      attributeRequest.setValue(attributeValue);\n      return attributeRequest;\n    }\n    \n    if(plan != null) {\n        Identity identity = plan.getIdentity();\n        String lifecycleState = null;\n        String accreq_role = null;\n        String accreq_permissionSet = null; \n        String accreq_managedPackage = null;\n        String profile = null;\n        String role = null;\n        String nativeId = null;\n        String ACCESS_REQUEST_MAPPING = \"THP Salesforce Access Request [source]\";\n        if(identity != null) {\n            List accountRequests = plan.getAccountRequests();\n            lifecycleState = identity.getAttribute(\"cloudLifecycleState\");\n            if(accountRequests != null && !accountRequests.isEmpty()) {\n                for(AccountRequest accountRequest : accountRequests) {\n                    AccountRequest.Operation op = accountRequest.getOperation();\n                    String nativeIdentity = accountRequest.getNativeIdentity();\n                    if(op == null) continue;\n                    if(op == AccountRequest.Operation.Create || op == AccountRequest.Operation.Modify) {\n                        List attReqs = accountRequest.getAttributeRequests();\n                        \n                        if(accountRequest.getAttributeRequests() != null && !attReqs.isEmpty()) {\n\n                            //get access request information\n                            for (ProvisioningPlan.AttributeRequest attributeReq: attReqs) {\n\n                                String name = attributeReq.getName();\n                                if ( name.equalsIgnoreCase(\"ProfileId\") ){\n                                    String ProfileAttrValue = (String) attributeReq.getValue();\n                                    ManagedAttributeDetails managedAttributeDetails = idn.getManagedAttributeDetails(application.getId(), \"ProfileId\", ProfileAttrValue, Type.Entitlement);\n                                \n                                    if (managedAttributeDetails == null)\n                                    throw new Exception(\" managed attribute per [\"+ name + \",\" + value +\"]\");\n\n                                    Map madAttributes = managedAttributeDetails.getAttributes();\n\t\t\t\t\t\t\t        profile = (String) madAttributes.get(\"Name\");\n                                }\n                                if ( name.equalsIgnoreCase(\"Role\") ){\n                                    String RoleAttrValue = (String) attributeReq.getValue();\n                                    ManagedAttributeDetails managedAttributeDetails = idn.getManagedAttributeDetails(application.getId(), \"Role\", RoleAttrValue, Type.Entitlement);\n                                \n                                    if (managedAttributeDetails == null)\n                                    throw new Exception(\" managed attribute per [\"+ name + \",\" + value +\"]\");\n\n                                    Map madAttributes = managedAttributeDetails.getAttributes();\n\t\t\t\t\t\t\t        role = (String) madAttributes.get(\"Name\");\n                                }\n                            }\n                        }\n                        if(profile!=null){\n                            nativeId = profile + \"|\" + role;\n                        \n                        Account account = idn.getAccountByNativeIdentity(ACCESS_REQUEST_MAPPING,nativeId);\n                        if(account != null){\n\n                            //get mapping information from delimited source\n                            accreq_managedPackage = idn.getAccountAttribute(account, \"ManagedPackage\");\n                            accreq_permissionSet = idn.getAccountAttribute(account, \"PermissionSet\");\n                            accreq_role = idn.getAccountAttribute(account, \"Role\");\n                            String accreq_userPermissionsSupportUser = idn.getAccountAttribute(account, \"UserPermissionsSupportUser\");\n                            String accreq_userPermissionsMarketingUser = idn.getAccountAttribute(account, \"UserPermissionsMarketingUser\");\n                            String accreq_userPermissionsKnowledgeUser = idn.getAccountAttribute(account, \"UserPermissionsKnowledgeUser\");\n                        \n\n                             //add attribute requests according to mapping\n                            if(accreq_role==null){\n                                accountRequest.add(newAttributeRequest(\"Role\", \"\"));\n                            }\n                            if(accreq_permissionSet==null){\n                                accountRequest.add(newAttributeRequest(\"PermissionSet\", \"\"));\n                            }\n                            if(accreq_managedPackage==null){\n                                accountRequest.add(newAttributeRequest(\"ManagedPackage\", \"\"));\n                            }\n\n                            accountRequest.add(newAttributeRequest(\"UserPermissionsSupportUser\", accreq_userPermissionsSupportUser));\n                            accountRequest.add(newAttributeRequest(\"UserPermissionsMarketingUser\", accreq_userPermissionsMarketingUser));\n                            accountRequest.add(newAttributeRequest(\"UserPermissionsKnowledgeUser\", accreq_userPermissionsKnowledgeUser));\n                        }\n                        }\n                    }\n                    else if( op == AccountRequest.Operation.Disable && \"inactive\".equals(lifecycleState) && nativeIdentity != null){\n                        accountRequest.add(newAttributeRequest(\"ManagedPackage\", \"\"));\n                    }\n                }\n            }\n        }\n    }\n"
  },
  "attributes": {
    "sourceVersion": "2022-11-15 21:51:12"
  },
  "id": "491160c983c6478fbebfc92a4ba4053b",
  "name": "THP-Salesforce BeforeProvisioning",
  "created": "2022-11-11T03:00:55.182Z",
  "modified": "2024-04-17T19:16:03.312Z"
}